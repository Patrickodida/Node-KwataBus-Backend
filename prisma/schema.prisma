// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BusRoute {
  routeId       Int       @id @default(autoincrement())
  departureTown String
  arrivalTown   String
  departureTime DateTime
  fare          Float
  // Relations
  bookings      Booking[]
}

model BusService {
  busId    Int       @id @default(autoincrement())
  name     String
  // Relations
  bookings Booking[]
}

model Seat {
  seatId     Int     @id @default(autoincrement())
  seatNumber Int
  // Relations
  bookingId  Int
  booking    Booking @relation(fields: [bookingId], references: [bookingId])
}

model User {
  userId       Int       @id @default(autoincrement())
  userName     String    @unique
  email        String    @unique
  password     String
  firstName    String
  lastName     String
  mobileNumber String
  // Relations
  bookings     Booking[]
  payments     Payment[]
}

model Booking {
  bookingId    Int        @id @default(autoincrement())
  // Relations 
  user         User       @relation(fields: [userId], references: [userId])
  userId       Int
  BusRoute     BusRoute   @relation(fields: [busRouteId], references: [routeId])
  busRouteId   Int
  busService   BusService @relation(fields: [busServiceId], references: [busId])
  busServiceId Int
  seats        Seat[]
}

model Payment {
  paymentId     Int      @id @default(autoincrement())
  amount        Float
  paymentMethod String
  paymentDate   DateTime
  // Relations 
  userId        Int
  user          User     @relation(fields: [userId], references: [userId])
}
